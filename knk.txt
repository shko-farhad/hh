
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.nio.FloatBuffer;

import javax.media.opengl.GL2;
import javax.media.opengl.GLAutoDrawable;
import javax.media.opengl.GLEventListener;
import javax.media.opengl.awt.*;
import javax.swing.JFrame;

import com.jogamp.opengl.util.Animator;

public class Lab_03 extends JFrame implements GLEventListener, MouseListener {
	
	
	float r, g, b;
	boolean isTriangle;
	public Lab_03(String title) {
		
		super(title);
		
		GLCanvas canvas = new GLCanvas();
		Animator animator = new Animator(canvas);
		animator.start();
		
		canvas.setSize(600, 400);
		canvas.addGLEventListener(this);
		canvas.addMouseListener(this);
		add(canvas);
		pack();

		
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setLocation(200, 200);
		
		setVisible(true);
		
	}
	
 
	
	public static void main(String[] args) {
		
		new Lab_03("First Lab");

	}

	@Override
	public void display(GLAutoDrawable drawable) {
		 
		GL2 gl = drawable.getGL().getGL2();
		
		gl.glClear(GL2.GL_COLOR_BUFFER_BIT);
		
		
		
		gl.glColor3f(r, g, b);
		gl.glPointSize(4.0f);
		
		if(isTriangle == false) {
		gl.glBegin(GL2.GL_POLYGON);
		//gl.glBegin(GL2.GL_QUADS);
		
		gl.glVertex3f(.5f, 0.5f, .0f);
		gl.glVertex3f(-.5f, 0.5f, .0f);
		gl.glVertex3f(-.5f, -0.5f, .0f);
		gl.glVertex3f(.5f, -0.5f, .0f);
					
		gl.glEnd();
		}
		else {
		gl.glBegin(GL2.GL_TRIANGLES);
		//gl.glBegin(GL2.GL_QUADS);
		
		gl.glVertex3f(.5f, 0.5f, .0f);
		gl.glVertex3f(-.5f, 0.5f, .0f);
		gl.glVertex3f(-.5f, -0.5f, .0f);
		gl.glVertex3f(.5f, -0.5f, .0f);
					
		gl.glEnd();
		}
		
		//haman chwargoshay sarawa drwst akat
		//gl.glRectf(-.5f, 0.5f, .5f, -0.5f);
		
	}

	@Override
	public void dispose(GLAutoDrawable drawable) {
		// TODO Auto-generated method stub
		
		//System.out.println("dispose()");
	}

	@Override
	public void init(GLAutoDrawable drawable) {
		// TODO Auto-generated method stub
		//System.out.println("init()");
		
		GL2 gl = drawable.getGL().getGL2();
		//gl.glClearColor((255.0f/255.0f), .0f, .0f, .0f);
		
		r = g = b = 1.0f;
		isTriangle = false;
		
		
	}

	@Override
	public void reshape(GLAutoDrawable drawable, int x, int y, int width, int height) {
		// TODO Auto-generated method stub
		//System.out.println("reshape()");
		
		
		
	}



	@Override
	public void mouseClicked(MouseEvent e) {
		// TODO Auto-generated method stub
		System.out.println("mouseClicked");
		
		isTriangle = !isTriangle;
		
	
	}



	@Override
	public void mouseEntered(MouseEvent e) {
		// TODO Auto-generated method stub
		System.out.println("mouseEntered");
		
		r=1.0f;
		g = b =.0f;
		//isTriangle = true;
		
	}



	@Override
	public void mouseExited(MouseEvent e) {
		// TODO Auto-generated method stub
		System.out.println("mouseExited");
		
		r = g = b = 1.0f;
		//isTriangle = false;
	}



	@Override
	public void mousePressed(MouseEvent e) {
		// TODO Auto-generated method stub
		System.out.println("mousePressed");
		
	}


	@Override
	public void mouseReleased(MouseEvent e) {
		// TODO Auto-generated method stub
		System.out.println("mouseReleased");
		
	}

	
}